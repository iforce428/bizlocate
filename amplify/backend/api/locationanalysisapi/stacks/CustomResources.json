{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An auto-generated nested stack for REST API.",
  "Metadata": {},
  "Parameters": {
    "authRoleName": {
      "Type": "String"
    },
    "unauthRoleName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "functionbedrockChatName": {
      "Type": "String"
    },
    "functionbedrockChatArn": {
      "Type": "String"
    }
  },
  "Resources": {
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Location Analysis API",
        "Name": {
          "Fn::Join": [
            "",
            [
              "bizlocateapi",
              "-",
              {
                "Ref": "env"
              }
            ]
          ]
        },
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "2018-05-24T17:52:00Z",
            "title": "bizlocateapi"
          },
          "host": "apigateway.amazonaws.com",
          "basePath": "/prod",
          "schemes": [
            "https"
          ],
          "paths": {
            "/api/bedrock-chat": {
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock"
                }
              },
              "post": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "uri": {
                    "Fn::Sub": [
                      "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations",
                      {
                        "functionArn": {
                          "Ref": "functionbedrockChatArn"
                        }
                      }
                    ]
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "type": "aws_proxy"
                }
              }
            }
          }
        },
        "FailOnWarnings": true
      }
    },
    "DeploymentAPIGW": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "The Development stage deployment of your API.",
        "StageName": "prod",
        "RestApiId": {
          "Ref": "RestApi"
        }
      }
    },
    "PermissionForAPIGWToInvokeLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "functionbedrockChatName"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/*/*",
            {
              "RestApi": {
                "Ref": "RestApi"
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "RootUrl": {
      "Description": "Root URL of the API gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/prod"
          ]
        ]
      }
    },
    "ApiName": {
      "Description": "API Friendly name",
      "Value": "bizlocateapi"
    },
    "ApiId": {
      "Description": "API ID (prefix of API URL)",
      "Value": {
        "Ref": "RestApi"
      }
    }
  }
}